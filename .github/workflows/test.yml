name: sklearn1.0
on:
  workflow_dispatch:
jobs:
  sklearn:
    name: Download
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Get run ID of "build_oneDAL" workflow
        id: get-run-id
        run: |
          OTHER_REPO="${{ github.repository }}"
          WF_NAME="oneDAL nightly build"
          RUN_ID=`gh run --repo ${OTHER_REPO} list --workflow "${WF_NAME}" --json databaseId --jq .[0].databaseId`
          echo "Detected latest run id of ${RUN_ID} for workflow ${WF_NAME}"
          echo "run-id=${RUN_ID}" >> "$GITHUB_OUTPUT"
        env:
          GH_TOKEN: ${{ github.token }}
      - name: Download artifact from "build_oneDAL" workflow
        uses: actions/download-artifact@v4
        with:
          name: __release_lnx # Match name used in test.yml upload artifact step
          github-token: ${{ github.token }}
          repository: ${{ github.repository }}
          run-id: ${{ steps.get-run-id.outputs.run-id }}
          path: ./__release_lnx
      - name: Show downloaded files
        run: ls -la
      - name: apt-get
        run: sudo apt-get update && sudo apt-get install -y clang-format python3.9
      - name: dpcpp installation
        run: bash .ci/scripts/install_dpcpp.sh
      - name: describe system
        run: bash .ci/scripts/describe_system.sh
      - name: Install develop requirements
        run: |
          pip install -r dependencies-dev
          pip list
      - name: Build daal4py/sklearnex
        run: |
          export DPCPPROOT=/opt/intel/oneapi/compiler/latest
          source /opt/intel/oneapi/compiler/latest/env/vars.sh # prepare icpx
          source /opt/intel/oneapi/tbb/latest/env/vars.sh # prepare tbb
          source ./__release_lnx/daal/latest/env/vars.sh # prepare oneDAL
          python3.9 setup.py install --single-version-externally-managed --record=record.txt
          python3.9 setup_sklearnex.py install --single-version-externally-managed --record=record_sklearnex.txt
